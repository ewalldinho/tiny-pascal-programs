Program kalender_v2;
   Uses Crt;
   Type metai = array[1..12] of string;
        langelis = array[1..5] of byte;
        langeliai = array[1..8] of langelis;
   Const men : metai = ('Sausis', 'Vasaris', 'Kovas', 'Balandis',
                        'Geguze', 'Birzelis', 'Liepa', 'Rugpjutis',
                        'Rugsejis', 'Spalis', 'Lapkritis', 'Gruodis');
         lan : langeliai = ((4, 4,20,12, white), (23, 4,39,12, white), (42, 4,58,12, white), (61, 4,77,12, white),
                            (4,15,20,23, white), (23,15,39,23, white), (42,15,58,23, white), (61,15,77,23, white));
  Procedure design;
    begin
      Window(1, 1, 80, 25);
      TextBackground(black); ClrScr;
 //---------- virðutinë eilutë ----------
      Window(lan[1, 1], lan[1, 2], lan[1, 3], lan[1, 4]);
      TextBackground(lan[1, 5]);  ClrScr;
      Window(lan[2, 1], lan[2, 2], lan[2, 3], lan[2, 4]);
      TextBackground(lan[2, 5]);  ClrScr;
      Window(lan[3, 1], lan[3, 2], lan[3, 3], lan[3, 4]);
      TextBackground(lan[3, 5]);  ClrScr;
      Window(lan[4, 1], lan[4, 2], lan[4, 3], lan[4, 4]);
      TextBackground(lan[4, 5]);  ClrScr;
 //---------- apatinë eilutë ------------
      Window(lan[5, 1], lan[5, 2], lan[5, 3], lan[5, 4]);
      TextBackground(lan[5, 5]);  ClrScr;
      Window(lan[6, 1], lan[6, 2], lan[6, 3], lan[6, 4]);
      TextBackground(lan[6, 5]);  ClrScr;
      Window(lan[7, 1], lan[7, 2], lan[7, 3], lan[7, 4]);
      TextBackground(lan[7, 5]);  ClrScr;
      Window(lan[8, 1], lan[8, 2], lan[8, 3], lan[8, 4]);
      TextBackground(lan[8, 5]);  ClrScr;
      TextColor(black);
    end;  // design

  Function kel (m : word): boolean;  // ar metai 'm' keliamieji
    begin
      kel := (m mod 400 = 0) or
             (m mod 100 <> 0) and (m mod 4 = 0)
// si funkcija tinka tik Grigalijaus kalendoriui, naudojamam daugelyje saliu
    end;  // kel
    
  Function d_sk (M : word; men : byte) : byte;
    begin
      Case men of
         1, 3, 5, 7, 8, 10, 12 : d_sk := 31;
         2 : if kel(M)
               then d_sk := 29
               else d_sk := 28;
         4, 6, 9, 11 : d_sk := 30;
       else write (' ERROR!!! ');
      end;
    end;  // d_sk
    
  Procedure forma (kas : byte);
    begin
    end;  // forma
    
  Procedure isvesti (var M : word; dalis : byte);
        var i : integer;
            pr_men : integer;
    begin
      Window(1,1,80,25);
      TextColor(red);
      GoToXY (35, 2); Write (M, ' metai');
      Design;
      Case dalis of
        1 : begin
              pr_men := 1;     // iðveda nuo sausio iki rugpjûèio
              WriteLn (M, ' m. ', men[pr_men], d_sk(M, pr_men), ' - ', men[pr_men+3], d_sk(M, pr_men+3));
            end;
        2 : begin
             pr_men := 5;     // iðveda nuo geguþës iki gruodþio
             WriteLn (M, ' m. ', men[pr_men], d_sk(M, pr_men), ' - ', men[pr_men+3], d_sk(M, pr_men+3) );
            end;
        3 : begin             // iðveda nuo rugsëjo iki k. m. balandþio
              pr_men := 9;
              WriteLn (M, ' m. ', men[pr_men], d_sk(M, pr_men), ' - ', men[pr_men+3], d_sk(M, pr_men+3) );
              M := M + 1;
            end;
      end;

      Case dalis of
        1 : begin
              pr_men := 5;     // iðveda nuo sausio iki rugpjûèio
              WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
        2 : begin
             pr_men := 9;     // iðveda nuo geguþës iki gruodþio
             WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
        3 : begin             // iðveda nuo rugsëjo iki k. m. balandþio
              pr_men := 1;
              WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
      end;
      WriteLn('-----------------------------');
    end; // isvesti
  
  Procedure vykdymas (var M : word; savd : byte);
        var skiltis : byte;
            pabaiga : boolean;
            sim : char;
    begin                //   M - M              M - M           M - M+1
      Skiltis := 1;     // sausis-rugpjutis, !geguze-gruodis!, rugsejis-balandis,
      Pabaiga := FALSE;
      Repeat
        Isvesti({savd,} M, skiltis);   // isveda M-uju metu sausio - rugpjucio kalendoriu
        sim := ReadKey;
        Case sim of
          #0: begin
                sim := ReadKey;
                Case sim of
                  #72: begin                  { Up }
                         skiltis := skiltis - 1;
                       end;
                  #75: begin                  { Left }
                         M := M - 1;
                         If M < 1583 then M := 1583;
                       end;
                  #77: begin                  { Right }
                         M := M + 1;
                         If M < 1583 then M := 1583;
                       end;
                  #80: begin                  { Down }
                         skiltis := skiltis + 1;
                       end;
                end; // case
              end; //#0: begin
          #27 : pabaiga := True;
        end;  // Case sim of
        If skiltis < 1
           then begin
                  skiltis := 3;
                  M := M - 1;
                end;
        If skiltis > 3
           then begin
                  skiltis := 1;
                  M := M + 1;
                end;
    Until pabaiga;
    end;  // vykdymas
{-------------------------------------  bandymai  -----------------------------}
   var savd : byte;
       M : word;
Begin
  Design;
  M := 1700;
  Savd := 1;
  Vykdymas(M, savd);
End.
