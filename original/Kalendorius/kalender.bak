Program kalender_v2;
   Uses Crt;
   Type metai = array[1..12] of string;
   Const men : metai = ('Sausis', 'Vasaris', 'Kovas', 'Balandis',
                        'Geguze', 'Birzelis', 'Liepa', 'Rugpjutis',
                        'Rugsejis', 'Spalis', 'Lapkritis', 'Gruodis');

  Procedure forma (kas : byte);
    begin
    end;  // forma
    
  Procedure isvesti (var M : word; dalis : byte);
        var i : integer;
            pr_men : integer;
    begin
      Case dalis of
        1 : begin
              pr_men := 1;     // iðveda nuo sausio iki rugpjûèio
              WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
        2 : begin
             pr_men := 5;     // iðveda nuo geguþës iki gruodþio
             WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
        3 : begin             // iðveda nuo rugsëjo iki k. m. balandþio
              pr_men := 9;
              WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
              M := M + 1;
            end;
      end;

      Case dalis of
        1 : begin
              pr_men := 5;     // iðveda nuo sausio iki rugpjûèio
              WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
        2 : begin
             pr_men := 9;     // iðveda nuo geguþës iki gruodþio
             WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
        3 : begin             // iðveda nuo rugsëjo iki k. m. balandþio
              pr_men := 1;
              WriteLn (M, ' m. pradinis men ', men[pr_men], ' iki ', men[pr_men+3]);
            end;
      end;
      WriteLn('-----------------------------');
    end; // isvesti
  
  Procedure vykdymas (var M : word; savd : byte);
        var skiltis : byte;
            pabaiga : boolean;
            sim : char;
    begin                //   M - M              M - M           M - M+1
      Skiltis := 1;     // sausis-rugpjutis, !geguze-gruodis!, rugsejis-balandis,
      Pabaiga := FALSE;
      Repeat
        Isvesti({savd,} M, skiltis);   // isveda M-uju metu sausio - rugpjucio kalendoriu
        sim := ReadKey;
        Case sim of
          #0: begin
                sim := ReadKey;
                Case sim of
                  #72: begin                  { Up }
                         skiltis := skiltis - 1;
                       end;
                  #75: begin                  { Left }
                         M := M - 1;
                         If M < 1583 then M := 1583;
                       end;
                  #77: begin                  { Right }
                         M := M + 1;
                         If M < 1583 then M := 1583;
                       end;
                  #80: begin                  { Down }
                         skiltis := skiltis + 1;
                       end;
                end; // case
              end; //#0: begin
          #27 : pabaiga := True;
        end;  // Case sim of
        If skiltis < 1
           then begin
                  skiltis := 3;
                  M := M - 1;
                end;
        If skiltis > 3
           then begin
                  skiltis := 1;
                  M := M + 1;
                end;
    Until pabaiga;
    end;  // vykdymas
{-------------------------------------  bandymai  -----------------------------}
   var savd : byte;
       M : word;
Begin
  M := 1700;
  Savd := 1;
  Vykdymas(M, savd);
End.
